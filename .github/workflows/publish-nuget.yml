name: Publish to NuGet.org

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      PROJECT: NugetConfigCreator.csproj
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore $PROJECT
    
    - name: Build
      run: dotnet build $PROJECT --configuration Release --no-restore

    - name: Get version from .csproj
      id: get_version
      shell: pwsh
      run: |
        [xml]$xml = Get-Content $env:PROJECT
        $ver = ($xml.Project.PropertyGroup | ForEach-Object { $_.Version } | Where-Object { $_ } | Select-Object -First 1)
        if (-not $ver) { throw "Version property not found in $env:PROJECT" }
        "version=$ver" >> $env:GITHUB_OUTPUT
        Write-Host "Resolved version: $ver"
    
    - name: Pack v${{ steps.get_version.outputs.version }}
      run: dotnet pack $PROJECT --configuration Release --no-build --output ./artifacts

    - name: Push to NuGet.org v${{ steps.get_version.outputs.version }}
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Upload package artifact v${{ steps.get_version.outputs.version }}
      uses: actions/upload-artifact@v4
      with:
        name: nugetc-v${{ steps.get_version.outputs.version }}
        path: ./artifacts/*.nupkg

    - name: Summary
      shell: pwsh
      run: |
        $ver = "${{ steps.get_version.outputs.version }}"
        "### Published nugetc v$ver`n" >> $env:GITHUB_STEP_SUMMARY
        "Pushed packages:" >> $env:GITHUB_STEP_SUMMARY
        Get-ChildItem artifacts -Filter *.nupkg | ForEach-Object { "- $($_.Name)" } >> $env:GITHUB_STEP_SUMMARY
